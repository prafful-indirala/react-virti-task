{"ast":null,"code":"var _jsxFileName = \"/Users/saiprafful/Documents/virti-video-task/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from \"react-identicons\";\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport \"./App.css\";\nimport SampleVideo from \"./sample-mp4-file.mp4\";\nimport captions from \"./sample.vtt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\nconst contentDefaultMessage = \"Start writing your document here\";\nconst contentDefaultMessageVideo = \"Enter Video TimeStamp\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logInUser = () => {\n      const username = this.username.value;\n\n      if (username.trim()) {\n        const data = {\n          username\n        };\n        this.setState({ ...data\n        }, () => {\n          client.send(JSON.stringify({ ...data,\n            type: \"userevent\"\n          }));\n        });\n      }\n    };\n\n    this.handlefileread = e => {\n      const content = this.state.fileReader.result;\n      console.log(\"content\", content);\n    };\n\n    this.submitText = () => {\n      // fetch(this.state.cap)\n      //   .then((r) => r.text())\n      //   .then((text) => {\n      //     console.log(\"text decoded:\", text);\n      //   });\n      localStorage.setItem(\"myValuetext\", this.state.text);\n      localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n      localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n      console.log(\"this.state.text\", this.state.text);\n      console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n      console.log(\"current Time stamp\", new Date().getTime());\n    };\n\n    this.addTrackTag = () => {\n      let track = document.createElement(\"track\");\n      track.kind = \"captions\";\n      track.label = \"English\";\n      track.srclang = \"en\";\n      track.src = this.state.cap;\n      track.addEventListener(\"load\", function () {\n        this.mode = \"showing\";\n        this.myRef.current.textTracks[0].mode = \"showing\";\n      });\n      this.appendChild(track);\n    };\n\n    this.createtrackTag = () => {\n      console.log(\" this.myRef.current\", this.myRef.current);\n      this.myRef.current.addTrackTag(\"captions\", \"English\", \"en\"); // this.myRef.current.addEventListener(\n      //   \"loadedmetadata\",\n      //   function() {\n      //     // We can't dynamically load <tracks> for subtitles, so we have to hook into the onload of the video...\n      //     this.state.track = document.createElement(\"track\");\n      //     this.state.track.kind = \"captions\";\n      //     this.state.track.label = \"English\";\n      //     this.state.track.srclang = \"en\";\n      //     this.state.track.src = this.state.cap;\n      //     this.state.track.addEventListener(\"load\", function() {\n      //       this.mode = \"showing\";\n      //       this.myRef.current.textTracks[0].mode = \"showing\";\n      //     });\n      //     this.appendChild(this.state.track);\n      //   },\n      //   true\n      // );\n      // const boy = (this.myRef.current.textTracks[0].cues[0].text =\n      //   \"how are you boy\");\n      // console.log(\"dh\", boy);\n      //     track.addCue(new VTTCue(0, 12, \"[Test]\"));\n      // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      // track.addCue(new VTTCue(22.8, 26.8, \"It has shed much innocent blood.\"));\n      // this.myRef.current;\n      // console.log(\"this.state.text\", this.state.text);\n      // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n      // console.log(\"current Time stamp\", new Date().getTime());\n      // localStorage.setItem(\"myValuetext\", this.state.text);\n      // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n      // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n    };\n\n    this.onEditorStateChange = text => {\n      console.log(\"text\", text);\n      client.send(JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: text\n      }));\n    };\n\n    this.onVideoTimeStampStateChange = time => {\n      console.log(\"onVideoTimeStampStateChange\", time);\n      client.send(JSON.stringify({\n        type: \"videotimechange\",\n        username: this.state.username,\n        content: time\n      }));\n    };\n\n    this.Playback = () => {// window.location.reload(false);\n      // this.myRef.current.playbackRate;\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        text: event.target.value\n      });\n      client.send(JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: this.state.text\n      }));\n      console.log(this.state.text);\n    };\n\n    this.showLoginSection = () => /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Identicon, {\n          className: \"account__avatar\",\n          size: 64,\n          string: \"randomness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Hello, user!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"account__sub\",\n          children: \"Join the Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        ref: input => {\n          this.username = input;\n        },\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.logInUser(),\n        id: \"login-btn\",\n        className: \"btn btn-primary\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this);\n\n    this.showEditorSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currentusers\",\n          children: this.state.currentUsers.map(user => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: user.username,\n              className: \"userInfo\",\n              children: /*#__PURE__*/_jsxDEV(Identicon, {\n                className: \"account__avatar\",\n                style: {\n                  backgroundColor: user.randomcolor\n                },\n                size: 40,\n                string: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n              placement: \"top\",\n              target: user.username,\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this), this.state.SavedText && \"1\" == \"1\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.SavedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          autoPlay: true,\n          ref: this.myRef,\n          onTimeUpdate: this.hello.bind(this) // onLoad={this.createtrackTag()}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: this.state.video,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n            label: \"English\",\n            kind: \"captions\",\n            srcLang: \"en\",\n            src: this.state.cap,\n            default: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this), \"Enter Text\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"fname\",\n          type: \"text\",\n          value: this.state.text,\n          onChange: e => this.onInputchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            placeholder: {\n              text: this.state.text ? contentDefaultMessage : \"\"\n            }\n          },\n          className: \"body-editor\",\n          text: this.state.text,\n          onChange: this.onEditorStateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this), \"Enter Video Time Stamp\", /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            placeholder: {\n              text: this.state.videoTimeStamp ? contentDefaultMessageVideo : \"\"\n            }\n          },\n          className: \"body-editor\",\n          text: this.state.videoTimeStamp,\n          onChange: this.onVideoTimeStampStateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.submitText(),\n          className: \"btn btn-primary account__btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.Playback(),\n          className: \"btn btn-primary account__btn\",\n          children: \"PlayBack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.userActivity.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: activity\n          }, `activity-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this);\n\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentUsers: [],\n      userActivity: [],\n      username: null,\n      text: \"\",\n      videoTimeStamp: \"\",\n      video: SampleVideo,\n      currentVideotime: \"\",\n      SavedText: localStorage.getItem(\"myValuetext\") || \"\",\n      savedvideotime: localStorage.getItem(\"myValuevideoTimeStamp\") || \"\",\n      savedsubmittime: localStorage.getItem(\"myValueSubmitedTime\") || \"\",\n      cap: captions,\n      track: \"\",\n      fileReader: \"\"\n    };\n  }\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage;\n      } else if (dataFromServer.type === \"videotimechange\") {\n        stateToChange.videoTimeStamp = dataFromServer.data.VideoTimeStamp || contentDefaultMessageVideo;\n      }\n\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({ ...stateToChange\n      });\n    };\n\n    console.log(\"savedtext\", this.state.SavedText);\n    console.log(\"savedvideotime\", this.state.savedvideotime);\n    console.log(\"savedtexttime\", this.state.savedsubmittime);\n  }\n\n  hello() {\n    this.setState({\n      currentVideotime: this.myRef.current.currentTime\n    });\n    console.log(\"TimeStamp\", this.state.currentVideotime);\n  }\n\n  render() {\n    const {\n      username\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"light\",\n        light: true,\n        children: /*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: \"Real-time document editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: username ? this.showEditorSection() : this.showLoginSection()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saiprafful/Documents/virti-video-task/client/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Identicon","Navbar","NavbarBrand","UncontrolledTooltip","Editor","SampleVideo","captions","client","contentDefaultMessage","contentDefaultMessageVideo","App","constructor","props","logInUser","username","value","trim","data","setState","send","JSON","stringify","type","handlefileread","e","content","state","fileReader","result","console","log","submitText","localStorage","setItem","text","videoTimeStamp","Date","getTime","addTrackTag","track","document","createElement","kind","label","srclang","src","cap","addEventListener","mode","myRef","current","textTracks","appendChild","createtrackTag","onEditorStateChange","onVideoTimeStampStateChange","time","Playback","onInputchange","event","target","showLoginSection","input","showEditorSection","currentUsers","map","user","backgroundColor","randomcolor","SavedText","hello","bind","video","placeholder","userActivity","activity","index","createRef","currentVideotime","getItem","savedvideotime","savedsubmittime","componentWillMount","onopen","onmessage","message","dataFromServer","parse","stateToChange","Object","values","users","editorContent","VideoTimeStamp","currentTime","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from \"react-identicons\";\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport \"./App.css\";\nimport SampleVideo from \"./sample-mp4-file.mp4\";\nimport captions from \"./sample.vtt\";\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\nconst contentDefaultMessage = \"Start writing your document here\";\nconst contentDefaultMessageVideo = \"Enter Video TimeStamp\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      currentUsers: [],\n      userActivity: [],\n      username: null,\n      text: \"\",\n      videoTimeStamp: \"\",\n      video: SampleVideo,\n      currentVideotime: \"\",\n      SavedText: localStorage.getItem(\"myValuetext\") || \"\",\n      savedvideotime: localStorage.getItem(\"myValuevideoTimeStamp\") || \"\",\n      savedsubmittime: localStorage.getItem(\"myValueSubmitedTime\") || \"\",\n      cap: captions,\n      track: \"\",\n      fileReader: \"\",\n    };\n  }\n\n  logInUser = () => {\n    const username = this.username.value;\n    if (username.trim()) {\n      const data = {\n        username,\n      };\n      this.setState(\n        {\n          ...data,\n        },\n        () => {\n          client.send(\n            JSON.stringify({\n              ...data,\n              type: \"userevent\",\n            })\n          );\n        }\n      );\n    }\n  };\n  handlefileread = (e) => {\n    const content = this.state.fileReader.result;\n    console.log(\"content\", content);\n  };\n  submitText = () => {\n    // fetch(this.state.cap)\n    //   .then((r) => r.text())\n    //   .then((text) => {\n    //     console.log(\"text decoded:\", text);\n    //   });\n\n    localStorage.setItem(\"myValuetext\", this.state.text);\n    localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n    localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n\n    console.log(\"this.state.text\", this.state.text);\n    console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n    console.log(\"current Time stamp\", new Date().getTime());\n  };\n\n  addTrackTag = () => {\n    let track = document.createElement(\"track\");\n    track.kind = \"captions\";\n    track.label = \"English\";\n    track.srclang = \"en\";\n    track.src = this.state.cap;\n    track.addEventListener(\"load\", function () {\n      this.mode = \"showing\";\n      this.myRef.current.textTracks[0].mode = \"showing\";\n    });\n    this.appendChild(track);\n  };\n\n  createtrackTag = () => {\n    console.log(\" this.myRef.current\", this.myRef.current);\n    this.myRef.current.addTrackTag(\"captions\", \"English\", \"en\");\n\n    // this.myRef.current.addEventListener(\n    //   \"loadedmetadata\",\n    //   function() {\n    //     // We can't dynamically load <tracks> for subtitles, so we have to hook into the onload of the video...\n    //     this.state.track = document.createElement(\"track\");\n    //     this.state.track.kind = \"captions\";\n    //     this.state.track.label = \"English\";\n    //     this.state.track.srclang = \"en\";\n    //     this.state.track.src = this.state.cap;\n    //     this.state.track.addEventListener(\"load\", function() {\n    //       this.mode = \"showing\";\n    //       this.myRef.current.textTracks[0].mode = \"showing\";\n    //     });\n    //     this.appendChild(this.state.track);\n    //   },\n    //   true\n    // );\n\n    // const boy = (this.myRef.current.textTracks[0].cues[0].text =\n    //   \"how are you boy\");\n    // console.log(\"dh\", boy);\n    //     track.addCue(new VTTCue(0, 12, \"[Test]\"));\n    // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n    // track.addCue(new VTTCue(22.8, 26.8, \"It has shed much innocent blood.\"));\n\n    // this.myRef.current;\n    // console.log(\"this.state.text\", this.state.text);\n    // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n    // console.log(\"current Time stamp\", new Date().getTime());\n    // localStorage.setItem(\"myValuetext\", this.state.text);\n    // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n    // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n  };\n\n  /* When content changes, we send the\ncurrent content of the editor to the server. */\n  onEditorStateChange = (text) => {\n    console.log(\"text\", text);\n    client.send(\n      JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: text,\n      })\n    );\n  };\n\n  onVideoTimeStampStateChange = (time) => {\n    console.log(\"onVideoTimeStampStateChange\", time);\n    client.send(\n      JSON.stringify({\n        type: \"videotimechange\",\n        username: this.state.username,\n        content: time,\n      })\n    );\n  };\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n    client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text =\n          dataFromServer.data.editorContent || contentDefaultMessage;\n      } else if (dataFromServer.type === \"videotimechange\") {\n        stateToChange.videoTimeStamp =\n          dataFromServer.data.VideoTimeStamp || contentDefaultMessageVideo;\n      }\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({\n        ...stateToChange,\n      });\n    };\n    console.log(\"savedtext\", this.state.SavedText);\n    console.log(\"savedvideotime\", this.state.savedvideotime);\n    console.log(\"savedtexttime\", this.state.savedsubmittime);\n  }\n\n  Playback = () => {\n    // window.location.reload(false);\n    // this.myRef.current.playbackRate;\n  };\n\n  onInputchange = (event) => {\n    this.setState({ text: event.target.value });\n\n    client.send(\n      JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: this.state.text,\n      })\n    );\n    console.log(this.state.text);\n  };\n\n  showLoginSection = () => (\n    <section id=\"container\">\n      <div className=\"form\">\n        <Identicon className=\"account__avatar\" size={64} string=\"randomness\" />\n        <label>Hello, user!</label>\n        <p className=\"account__sub\">Join the Session</p>\n      </div>\n      <input\n        name=\"username\"\n        ref={(input) => {\n          this.username = input;\n        }}\n        className=\"form-control\"\n      />\n      <button\n        type=\"button\"\n        onClick={() => this.logInUser()}\n        id=\"login-btn\"\n        className=\"btn btn-primary\"\n      >\n        Join\n      </button>\n    </section>\n  );\n\n  showEditorSection = () => (\n    <div className=\"main-content\">\n      <div className=\"document-holder\">\n        <div className=\"currentusers\">\n          {this.state.currentUsers.map((user) => (\n            <React.Fragment>\n              <span id={user.username} className=\"userInfo\" key={user.username}>\n                <Identicon\n                  className=\"account__avatar\"\n                  style={{ backgroundColor: user.randomcolor }}\n                  size={40}\n                  string={user.username}\n                />\n              </span>\n              <UncontrolledTooltip placement=\"top\" target={user.username}>\n                {user.username}\n              </UncontrolledTooltip>\n            </React.Fragment>\n          ))}\n        </div>\n        {this.state.SavedText && \"1\" == \"1\" && (\n          <div>{this.state.SavedText}</div>\n        )}\n        <video\n          controls\n          autoPlay={true}\n          ref={this.myRef}\n          onTimeUpdate={this.hello.bind(this)}\n          // onLoad={this.createtrackTag()}\n        >\n          <source src={this.state.video} type=\"video/mp4\" />\n          <track\n            label=\"English\"\n            kind=\"captions\"\n            srcLang=\"en\"\n            src={this.state.cap}\n            default\n          />\n        </video>\n        <br />\n        Enter Text\n        <input\n          name=\"fname\"\n          type=\"text\"\n          value={this.state.text}\n          onChange={(e) => this.onInputchange(e)}\n        />\n        <Editor\n          options={{\n            placeholder: {\n              text: this.state.text ? contentDefaultMessage : \"\",\n            },\n          }}\n          className=\"body-editor\"\n          text={this.state.text}\n          onChange={this.onEditorStateChange}\n        />\n        Enter Video Time Stamp\n        <Editor\n          options={{\n            placeholder: {\n              text: this.state.videoTimeStamp ? contentDefaultMessageVideo : \"\",\n            },\n          }}\n          className=\"body-editor\"\n          text={this.state.videoTimeStamp}\n          onChange={this.onVideoTimeStampStateChange}\n        />\n        <button\n          type=\"button\"\n          onClick={() => this.submitText()}\n          className=\"btn btn-primary account__btn\"\n        >\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.Playback()}\n          className=\"btn btn-primary account__btn\"\n        >\n          PlayBack\n        </button>\n      </div>\n      <div className=\"history-holder\">\n        <ul>\n          {this.state.userActivity.map((activity, index) => (\n            <li key={`activity-${index}`}>{activity}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  hello() {\n    this.setState({\n      currentVideotime: this.myRef.current.currentTime,\n    });\n    console.log(\"TimeStamp\", this.state.currentVideotime);\n  }\n  render() {\n    const { username } = this.state;\n    return (\n      <React.Fragment>\n        <Navbar color=\"light\" light>\n          <NavbarBrand href=\"/\">Real-time document editor</NavbarBrand>\n        </Navbar>\n        <div className=\"container-fluid\">\n          {username ? this.showEditorSection() : this.showLoginSection()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}