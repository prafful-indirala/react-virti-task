{"ast":null,"code":"var _jsxFileName = \"/Users/saiprafful/Documents/virti-video-task/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from \"react-identicons\";\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport \"./App.css\";\nimport SampleVideo from \"./sample-mp4-file.mp4\";\nimport captions from \"./sample.vtt\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().required(),\n  age: yup.number().positive().integer().required()\n});\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\nconst contentDefaultMessage = \"Start writing your document here\";\nconst contentDefaultMessageVideo = \"Enter Video TimeStamp\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logInUser = () => {\n      const username = this.username.value;\n\n      if (username.trim()) {\n        const data = {\n          username\n        };\n        this.setState({ ...data\n        }, () => {\n          client.send(JSON.stringify({ ...data,\n            type: \"userevent\"\n          }));\n        });\n      }\n    };\n\n    this.handlefileread = e => {\n      const content = this.state.fileReader.result; // console.log(\"content\", content);\n    };\n\n    this.submitText = () => {\n      var video = this.myRef.current;\n      console.log(video);\n      this.state.track = document.createElement(\"track\");\n      console.log(\"entered\", this.state.track); // track = video.addTextTrack(\"captions\", \"English\", \"en\");\n      // track.mode = \"showing\";\n      // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      // console.log(\"track\", track);\n      // fetch(this.state.cap)\n      //   .then((r) => r.text())\n      //   .then((text) => {\n      //     this.setState({ OGFileContent: text });\n      //   });\n      // const sample =\n      //   \"\\r\\n\" +\n      //   \"\\r\\n\" +\n      //   \"00:00:00.500\" +\n      //   \" --> \" +\n      //   \"00:00:02.000\" +\n      //   \"\\r\\n\" +\n      //   this.state.text;\n      // const finalContent = this.state.OGFileContent + sample;\n      // console.log(\"finalContent\", finalContent);\n      // localStorage.setItem(\"myValuetext\", this.state.text);\n      // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n      // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n      // console.log(\"this.state.text\", this.state.text);\n      // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n      // console.log(\"current Time stamp\", new Date().getTime());\n    };\n\n    this.addTrackTag = () => {\n      let track = document.createElement(\"track\");\n      track.kind = \"captions\";\n      track.label = \"English\";\n      track.srclang = \"en\";\n      track.src = this.state.cap;\n      track.addEventListener(\"load\", function () {\n        this.mode = \"showing\";\n        this.myRef.current.textTracks[0].mode = \"showing\";\n      });\n      this.appendChild(track);\n    };\n\n    this.createtrackTag = () => {\n      // console.log(\" this.myRef.current\", this.myRef.current);\n      this.myRef.current.addTrackTag(\"captions\", \"English\", \"en\");\n      var video = document.getElementById(\"video\"),\n          track;\n      video.addEventListener(\"loadedmetadata\", function () {\n        track = this.addTextTrack(\"captions\", \"English\", \"en\");\n        track.mode = \"showing\";\n        track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      }); // this.myRef.current.addEventListener(\n      //   \"loadedmetadata\",\n      //   function() {\n      //     // We can't dynamically load <tracks> for subtitles, so we have to hook into the onload of the video...\n      //     this.state.track = document.createElement(\"track\");\n      //     this.state.track.kind = \"captions\";\n      //     this.state.track.label = \"English\";\n      //     this.state.track.srclang = \"en\";\n      //     this.state.track.src = this.state.cap;\n      //     this.state.track.addEventListener(\"load\", function() {\n      //       this.mode = \"showing\";\n      //       this.myRef.current.textTracks[0].mode = \"showing\";\n      //     });\n      //     this.appendChild(this.state.track);\n      //   },\n      //   true\n      // );\n      // const boy = (this.myRef.current.textTracks[0].cues[0].text =\n      //   \"how are you boy\");\n      // console.log(\"dh\", boy);\n      //     track.addCue(new VTTCue(0, 12, \"[Test]\"));\n      // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      // track.addCue(new VTTCue(22.8, 26.8, \"It has shed much innocent blood.\"));\n      // this.myRef.current;\n      // console.log(\"this.state.text\", this.state.text);\n      // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n      // console.log(\"current Time stamp\", new Date().getTime());\n      // localStorage.setItem(\"myValuetext\", this.state.text);\n      // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n      // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n    };\n\n    this.onEditorStateChange = text => {\n      client.send(JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: text\n      }));\n    };\n\n    this.onVideoTimeStampStateChange = e => {\n      this.setState({\n        videoTimeStamp: e.target.value\n      });\n    };\n\n    this.Playback = () => {// window.location.reload(false);\n      // this.myRef.current.playbackRate;\n    };\n\n    this.showLoginSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account__profile\",\n            children: [/*#__PURE__*/_jsxDEV(Identicon, {\n              className: \"account__avatar\",\n              size: 64,\n              string: \"randomness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"account__name\",\n              children: \"Hello, user!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"account__sub\",\n              children: \"Join the Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            ref: input => {\n              this.username = input;\n            },\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.logInUser(),\n            className: \"btn btn-primary account__btn\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }, this);\n\n    this.showEditorSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currentusers\",\n          children: this.state.currentUsers.map(user => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: user.username,\n              className: \"userInfo\",\n              children: /*#__PURE__*/_jsxDEV(Identicon, {\n                className: \"account__avatar\",\n                style: {\n                  backgroundColor: user.randomcolor\n                },\n                size: 40,\n                string: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n              placement: \"top\",\n              target: user.username,\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this), this.state.SavedText && \"1\" == \"1\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.SavedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          autoPlay: true,\n          ref: this.myRef,\n          onTimeUpdate: this.hello.bind(this) // onLoad={this.createtrackTag()}\n          ,\n          onLoadedMetadata: this.submitText,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: this.state.video,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }, this), \"Enter Text\", /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            placeholder: {\n              text: this.state.text ? contentDefaultMessage : \"\"\n            }\n          },\n          className: \"body-editor\",\n          text: this.state.text,\n          onChange: this.onEditorStateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }, this), \"Enter Video Time Stamp\", /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            placeholder: {\n              text: this.state.videoTimeStamp ? contentDefaultMessageVideo : \"\"\n            }\n          },\n          className: \"body-editor\",\n          text: this.state.videoTimeStamp,\n          onChange: this.onVideoTimeStampStateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.submitText(),\n          className: \"btn btn-primary account__btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.Playback(),\n          className: \"btn btn-primary account__btn\",\n          children: \"PlayBack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.userActivity.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: activity\n          }, `activity-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this);\n\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentUsers: [],\n      userActivity: [],\n      username: null,\n      text: \"\",\n      videoTimeStamp: \"\",\n      video: SampleVideo,\n      currentVideotime: \"\",\n      SavedText: localStorage.getItem(\"myValuetext\") || \"\",\n      savedvideotime: localStorage.getItem(\"myValuevideoTimeStamp\") || \"\",\n      savedsubmittime: localStorage.getItem(\"myValueSubmitedTime\") || \"\",\n      cap: captions,\n      track: \"\",\n      fileReader: \"\",\n      OGFileContent: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  loading() {\n    {\n      var track;\n      console.log(\"entered\");\n      track = this.addTextTrack(\"captions\", \"English\", \"en\");\n      track.mode = \"showing\";\n      track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      console.log(\"track\", track);\n    }\n  }\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage;\n      } else if (dataFromServer.type === \"videotimechange\") {\n        stateToChange.videoTimeStamp = dataFromServer.data.VideoTimeStamp || contentDefaultMessageVideo;\n      }\n\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({ ...stateToChange\n      });\n    }; // console.log(\"savedtext\", this.state.SavedText);\n    // console.log(\"savedvideotime\", this.state.savedvideotime);\n    // console.log(\"savedtexttime\", this.state.savedsubmittime);\n\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    }); // client.send(\n    //   JSON.stringify({\n    //     type: \"contentchange\",\n    //     username: this.state.username,\n    //     content: this.state.text,\n    //   })\n    // );\n    // console.log(this.state.text);\n  }\n\n  hello() {// this.setState({\n    //   currentVideotime: this.myRef.current.currentTime,\n    // });\n    // console.log(\"TimeStamp\", this.state.currentVideotime);\n  }\n\n  render() {\n    const {\n      username\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"light\",\n        light: true,\n        children: /*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: \"Virti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: username ? this.showEditorSection() : this.showLoginSection()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saiprafful/Documents/virti-video-task/client/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Identicon","Navbar","NavbarBrand","UncontrolledTooltip","Editor","SampleVideo","captions","useForm","yupResolver","yup","schema","object","shape","firstName","string","required","age","number","positive","integer","client","contentDefaultMessage","contentDefaultMessageVideo","App","constructor","props","logInUser","username","value","trim","data","setState","send","JSON","stringify","type","handlefileread","e","content","state","fileReader","result","submitText","video","myRef","current","console","log","track","document","createElement","addTrackTag","kind","label","srclang","src","cap","addEventListener","mode","textTracks","appendChild","createtrackTag","getElementById","addTextTrack","addCue","VTTCue","onEditorStateChange","text","onVideoTimeStampStateChange","videoTimeStamp","target","Playback","showLoginSection","input","showEditorSection","currentUsers","map","user","backgroundColor","randomcolor","SavedText","hello","bind","placeholder","userActivity","activity","index","createRef","currentVideotime","localStorage","getItem","savedvideotime","savedsubmittime","OGFileContent","handleInputChange","loading","componentWillMount","onopen","onmessage","message","dataFromServer","parse","stateToChange","Object","values","users","editorContent","VideoTimeStamp","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from \"react-identicons\";\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport \"./App.css\";\nimport SampleVideo from \"./sample-mp4-file.mp4\";\nimport captions from \"./sample.vtt\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(),\n  age: yup.number().positive().integer().required(),\n});\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\nconst contentDefaultMessage = \"Start writing your document here\";\nconst contentDefaultMessageVideo = \"Enter Video TimeStamp\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      currentUsers: [],\n      userActivity: [],\n      username: null,\n      text: \"\",\n      videoTimeStamp: \"\",\n      video: SampleVideo,\n      currentVideotime: \"\",\n      SavedText: localStorage.getItem(\"myValuetext\") || \"\",\n      savedvideotime: localStorage.getItem(\"myValuevideoTimeStamp\") || \"\",\n      savedsubmittime: localStorage.getItem(\"myValueSubmitedTime\") || \"\",\n      cap: captions,\n      track: \"\",\n      fileReader: \"\",\n      OGFileContent: \"\",\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  logInUser = () => {\n    const username = this.username.value;\n    if (username.trim()) {\n      const data = {\n        username,\n      };\n      this.setState(\n        {\n          ...data,\n        },\n        () => {\n          client.send(\n            JSON.stringify({\n              ...data,\n              type: \"userevent\",\n            })\n          );\n        }\n      );\n    }\n  };\n  handlefileread = (e) => {\n    const content = this.state.fileReader.result;\n    // console.log(\"content\", content);\n  };\n\n  loading() {\n    {\n      var track;\n      console.log(\"entered\");\n      track = this.addTextTrack(\"captions\", \"English\", \"en\");\n      track.mode = \"showing\";\n      track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n      console.log(\"track\", track);\n    }\n  }\n\n  submitText = () => {\n    var video = this.myRef.current;\n    console.log(video);\n\n    this.state.track = document.createElement(\"track\");\n    console.log(\"entered\", this.state.track);\n    // track = video.addTextTrack(\"captions\", \"English\", \"en\");\n    // track.mode = \"showing\";\n    // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n    // console.log(\"track\", track);\n\n    // fetch(this.state.cap)\n    //   .then((r) => r.text())\n    //   .then((text) => {\n    //     this.setState({ OGFileContent: text });\n    //   });\n\n    // const sample =\n    //   \"\\r\\n\" +\n    //   \"\\r\\n\" +\n    //   \"00:00:00.500\" +\n    //   \" --> \" +\n    //   \"00:00:02.000\" +\n    //   \"\\r\\n\" +\n    //   this.state.text;\n\n    // const finalContent = this.state.OGFileContent + sample;\n\n    // console.log(\"finalContent\", finalContent);\n\n    // localStorage.setItem(\"myValuetext\", this.state.text);\n    // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n    // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n\n    // console.log(\"this.state.text\", this.state.text);\n    // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n    // console.log(\"current Time stamp\", new Date().getTime());\n  };\n\n  addTrackTag = () => {\n    let track = document.createElement(\"track\");\n    track.kind = \"captions\";\n    track.label = \"English\";\n    track.srclang = \"en\";\n    track.src = this.state.cap;\n    track.addEventListener(\"load\", function () {\n      this.mode = \"showing\";\n      this.myRef.current.textTracks[0].mode = \"showing\";\n    });\n    this.appendChild(track);\n  };\n\n  createtrackTag = () => {\n    // console.log(\" this.myRef.current\", this.myRef.current);\n    this.myRef.current.addTrackTag(\"captions\", \"English\", \"en\");\n\n    var video = document.getElementById(\"video\"),\n      track;\n    video.addEventListener(\"loadedmetadata\", function () {\n      track = this.addTextTrack(\"captions\", \"English\", \"en\");\n      track.mode = \"showing\";\n      track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n    });\n\n    // this.myRef.current.addEventListener(\n    //   \"loadedmetadata\",\n    //   function() {\n    //     // We can't dynamically load <tracks> for subtitles, so we have to hook into the onload of the video...\n    //     this.state.track = document.createElement(\"track\");\n    //     this.state.track.kind = \"captions\";\n    //     this.state.track.label = \"English\";\n    //     this.state.track.srclang = \"en\";\n    //     this.state.track.src = this.state.cap;\n    //     this.state.track.addEventListener(\"load\", function() {\n    //       this.mode = \"showing\";\n    //       this.myRef.current.textTracks[0].mode = \"showing\";\n    //     });\n    //     this.appendChild(this.state.track);\n    //   },\n    //   true\n    // );\n\n    // const boy = (this.myRef.current.textTracks[0].cues[0].text =\n    //   \"how are you boy\");\n    // console.log(\"dh\", boy);\n    //     track.addCue(new VTTCue(0, 12, \"[Test]\"));\n    // track.addCue(new VTTCue(18.7, 21.5, \"This blade has a dark past.\"));\n    // track.addCue(new VTTCue(22.8, 26.8, \"It has shed much innocent blood.\"));\n\n    // this.myRef.current;\n    // console.log(\"this.state.text\", this.state.text);\n    // console.log(\"this.state.videoTimeStamp\", this.state.videoTimeStamp);\n    // console.log(\"current Time stamp\", new Date().getTime());\n    // localStorage.setItem(\"myValuetext\", this.state.text);\n    // localStorage.setItem(\"myValuevideoTimeStamp\", this.state.videoTimeStamp);\n    // localStorage.setItem(\"myValueSubmitedTime\", new Date().getTime());\n  };\n\n  /* When content changes, we send the\ncurrent content of the editor to the server. */\n  onEditorStateChange = (text) => {\n    client.send(\n      JSON.stringify({\n        type: \"contentchange\",\n        username: this.state.username,\n        content: text,\n      })\n    );\n  };\n\n  onVideoTimeStampStateChange = (e) => {\n    this.setState({\n      videoTimeStamp: e.target.value,\n    });\n  };\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n    client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text =\n          dataFromServer.data.editorContent || contentDefaultMessage;\n      } else if (dataFromServer.type === \"videotimechange\") {\n        stateToChange.videoTimeStamp =\n          dataFromServer.data.VideoTimeStamp || contentDefaultMessageVideo;\n      }\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({\n        ...stateToChange,\n      });\n    };\n    // console.log(\"savedtext\", this.state.SavedText);\n    // console.log(\"savedvideotime\", this.state.savedvideotime);\n    // console.log(\"savedtexttime\", this.state.savedsubmittime);\n  }\n\n  Playback = () => {\n    // window.location.reload(false);\n    // this.myRef.current.playbackRate;\n  };\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n    // client.send(\n    //   JSON.stringify({\n    //     type: \"contentchange\",\n    //     username: this.state.username,\n    //     content: this.state.text,\n    //   })\n    // );\n    // console.log(this.state.text);\n  }\n\n  showLoginSection = () => (\n    <div className=\"account\">\n      <div className=\"account__wrapper\">\n        <div className=\"account__card\">\n          <div className=\"account__profile\">\n            <Identicon\n              className=\"account__avatar\"\n              size={64}\n              string=\"randomness\"\n            />\n            <p className=\"account__name\">Hello, user!</p>\n            <p className=\"account__sub\">Join the Session</p>\n          </div>\n          <input\n            name=\"username\"\n            ref={(input) => {\n              this.username = input;\n            }}\n            className=\"form-control\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => this.logInUser()}\n            className=\"btn btn-primary account__btn\"\n          >\n            Join\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  showEditorSection = () => (\n    <div className=\"main-content\">\n      <div className=\"document-holder\">\n        <div className=\"currentusers\">\n          {this.state.currentUsers.map((user) => (\n            <React.Fragment>\n              <span id={user.username} className=\"userInfo\" key={user.username}>\n                <Identicon\n                  className=\"account__avatar\"\n                  style={{ backgroundColor: user.randomcolor }}\n                  size={40}\n                  string={user.username}\n                />\n              </span>\n              <UncontrolledTooltip placement=\"top\" target={user.username}>\n                {user.username}\n              </UncontrolledTooltip>\n            </React.Fragment>\n          ))}\n        </div>\n        {this.state.SavedText && \"1\" == \"1\" && (\n          <div>{this.state.SavedText}</div>\n        )}\n        <video\n          controls\n          autoPlay={true}\n          ref={this.myRef}\n          onTimeUpdate={this.hello.bind(this)}\n          // onLoad={this.createtrackTag()}\n          onLoadedMetadata={this.submitText}\n        >\n          <source src={this.state.video} type=\"video/mp4\" />\n          {/* <track\n            label=\"English\"\n            kind=\"captions\"\n            srcLang=\"en\"\n            src={this.state.cap}\n            default\n          /> */}\n        </video>\n        <br />\n        Enter Text\n        {/* <input\n          name=\"text\"\n          type=\"text\"\n          ref=\"text\"\n          value={this.state.text}\n          onChange={this.handleInputChange}\n        /> */}\n        <Editor\n          options={{\n            placeholder: {\n              text: this.state.text ? contentDefaultMessage : \"\",\n            },\n          }}\n          className=\"body-editor\"\n          text={this.state.text}\n          onChange={this.onEditorStateChange}\n        />\n        Enter Video Time Stamp\n        {/* <input\n          name=\"videotime\"\n          type=\"text\"\n          value={this.state.currentVideotime}\n          onChange={this.onVideoTimeStampStateChange.bind(this)}\n        /> */}\n        <Editor\n          options={{\n            placeholder: {\n              text: this.state.videoTimeStamp ? contentDefaultMessageVideo : \"\",\n            },\n          }}\n          className=\"body-editor\"\n          text={this.state.videoTimeStamp}\n          onChange={this.onVideoTimeStampStateChange}\n        />\n        <button\n          type=\"button\"\n          onClick={() => this.submitText()}\n          className=\"btn btn-primary account__btn\"\n        >\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.Playback()}\n          className=\"btn btn-primary account__btn\"\n        >\n          PlayBack\n        </button>\n      </div>\n      <div className=\"history-holder\">\n        <ul>\n          {this.state.userActivity.map((activity, index) => (\n            <li key={`activity-${index}`}>{activity}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  hello() {\n    // this.setState({\n    //   currentVideotime: this.myRef.current.currentTime,\n    // });\n    // console.log(\"TimeStamp\", this.state.currentVideotime);\n  }\n  render() {\n    const { username } = this.state;\n    return (\n      <React.Fragment>\n        <Navbar color=\"light\" light>\n          <NavbarBrand href=\"/\">Virti</NavbarBrand>\n        </Navbar>\n        <div className=\"container-fluid\">\n          {username ? this.showEditorSection() : this.showLoginSection()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}